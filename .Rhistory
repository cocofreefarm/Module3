total.star2 <-length(which(star.dat$stars_x == 2))
total.star3 <-length(which(star.dat$stars_x == 3))
total.star4 <-length(which(star.dat$stars_x == 4))
total.star5 <-length(which(star.dat$stars_x == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(star.dat$stars_x,star.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
star.level <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- colnames(star.dat)[2:dim(star.dat)[2]]
which[colnames(freq.data)==names(sort(words[words>summary(words)[5]], decreasing= TRUE))]
freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(star.dat$stars_x == 1))
total.star2 <-length(which(star.dat$stars_x == 2))
total.star3 <-length(which(star.dat$stars_x == 3))
total.star4 <-length(which(star.dat$stars_x == 4))
total.star5 <-length(which(star.dat$stars_x == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(star.dat$stars_x,star.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
star.level <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- colnames(star.dat)[2:dim(star.dat)[2]]
names(sort(words[words>summary(words)[5]], decreasing= TRUE))
freq.data <- as.data.frame(cbind(star.level,freq.data))
require(nnet)
dat <- read.csv("Data/df.csv",header=TRUE)
star.dat <- dat[,c(2,11:dim(dat)[2])]
words <- apply(star.dat[,2:dim(star.dat)[2]],2,sum)
sort(words[words>summary(words)[5]], decreasing= TRUE)
dat <- read.csv("Data/df.csv",header=TRUE)
star.dat <- dat[,c(2,11:dim(dat)[2])]
words <- apply(star.dat[,2:dim(star.dat)[2]],2,sum)
wordembedding.dat <- star.dat
for (i in 1:dim(star.dat)[2]-1){
wordembedding.dat[which(star.dat[,i+1] >=1),i+1]=1
}
stars <- star.dat[,1]
wordembedding.dat <- wordembedding.dat[names(sort(words[words>summary(words)[5]], decreasing= TRUE))]
wordembedding.dat <- cbind(stars,wordembedding.dat)
wordembedding.dat$stars <- as.factor(wordembedding.dat$stars)
m1 <- multinom(stars~staff+service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m2 <- multinom(stars~service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m3 <- multinom(stars~employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m4 <- multinom(stars~manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
star.dat <- dat[,c(2,11:dim(dat)[2])]
require(nnet)
dat <- read.csv("Data/df.csv",header=TRUE)
words <- apply(star.dat[,2:dim(star.dat)[2]],2,sum)
wordembedding.dat <- star.dat
star.dat <- dat[,c(2,11:dim(dat)[2])]
words <- apply(star.dat[,2:dim(star.dat)[2]],2,sum)
wordembedding.dat <- star.dat
for (i in 1:dim(star.dat)[2]-1){
wordembedding.dat[which(star.dat[,i+1] >=1),i+1]=1
}
stars <- star.dat[,1]
wordembedding.dat <- wordembedding.dat[names(sort(words[words>summary(words)[5]], decreasing= TRUE))]
wordembedding.dat <- cbind(stars,wordembedding.dat)
wordembedding.dat$stars <- as.factor(wordembedding.dat$stars)
wordembedding.dat <- star.dat
for (i in 1:dim(star.dat)[2]-1){
wordembedding.dat[which(star.dat[,i+1] >=1),i+1]=1
}
stars <- star.dat[,1]
wordembedding.dat <- wordembedding.dat[names(sort(words[words>summary(words)[5]], decreasing= TRUE))]
wordembedding.dat <- cbind(stars,wordembedding.dat)
wordembedding.dat$stars <- as.factor(wordembedding.dat$stars)
```{r}
freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(wordembedding.dat$stars == 1))
total.star2 <-length(which(wordembedding.dat$stars == 2))
total.star3 <-length(which(wordembedding.dat$stars == 3))
total.star4 <-length(which(wordembedding.dat$stars == 4))
total.star5 <-length(which(wordembedding.dat$stars == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(star.dat$stars_x,star.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
star.level <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- colnames(star.dat)[2:dim(star.dat)[2]]
word.frequency <- function(argument1){
ind <- argument1
total.star1 <-length(which(wordembedding.dat$stars == 1))
total.star2 <-length(which(wordembedding.dat$stars == 2))
total.star3 <-length(which(wordembedding.dat$stars == 3))
total.star4 <-length(which(wordembedding.dat$stars == 4))
total.star5 <-length(which(wordembedding.dat$stars == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(wordembedding.dat$star,wordembedding.dat[,ind])
star1 <-length(which(wordembedding.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(wordembedding.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(wordembedding.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(wordembedding.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(wordembedding.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
Frequency <- v/total.v
barplot(Frequency, xlab = "Rates", ylab = "Word Frequency", main=ind)
}
```{r}
```{r}
par(mfrow=c(3,3))
word.frequency("great")
word.frequency("nice")
word.frequency("good")
word.frequency("bad")
word.frequency("like")
word.frequency("well")
word.frequency("best")
word.frequency("better")
word.frequency("love")
word.frequency("recommend")
word.frequency("awesome")
word.frequency("perfect")
word.frequency("wonderful")
word.frequency("enjoyed")
par(mfrow=c(3,3))
word.frequency("great")
word.frequency("nice")
word.frequency("good")
word.frequency("bad")
word.frequency("like")
word.frequency("well")
word.frequency("best")
word.frequency("better")
word.frequency("love")
word.frequency("recommend")
word.frequency("awesome")
word.frequency("perfect")
word.frequency("wonderful")
word.frequency("enjoyed")
word.frequency("excellent")
par(mfrow=c(3,3))
word.frequency("staff")
word.frequency("service")
word.frequency("employee")
word.frequency("manager")
word.frequency("reservation")
word.frequency("breakfast")
word.frequency("coffee")
word.frequency("drink")
word.frequency("price")
word.frequency("suite")
word.frequency("bed")
word.frequency("desk")
word.frequency("wifi")
word.frequency("tv")
word.frequency("fridge")
word.frequency("pillow")
word.frequency("towel")
par(mfrow=c(3,3))
word.frequency("room")
word.frequency("bathroom")
word.frequency("pool")
word.frequency("tub")
word.frequency("shower")
word.frequency("lobby")
word.frequency("elevator")
word.frequency("wall")
word.frequency("parking")
word.frequency("gym")
word.frequency("amenity")
par(mfrow=c(3,3))
word.frequency("shuttle")
word.frequency("downtown")
word.frequency("airport")
word.frequency("distance")
word.frequency("bar")
word.frequency("location")
word.frequency("restaurant")
word.frequency("park")
word.frequency("near")
par(mfrow=c(3,3))
word.frequency("family")
word.frequency("kid")
word.frequency("clean")
word.frequency("comfortable")
word.frequency("small")
word.frequency("pretty")
word.frequency("quiet")
word.frequency("beautiful")
word.frequency("spacious")
word.frequency("modern")
word.frequency("noise")
word.frequency("smell")
word.frequency("comfy")
sort(words[words>summary(words)[5]], decreasing= TRUE)
freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(star.dat$stars_x == 1))
total.star2 <-length(which(star.dat$stars_x == 2))
total.star3 <-length(which(star.dat$stars_x == 3))
total.star4 <-length(which(star.dat$stars_x == 4))
total.star5 <-length(which(star.dat$stars_x == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(star.dat$stars_x,star.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
star.level <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- colnames(star.dat)[2:dim(star.dat)[2]]
freq.data <- as.data.frame(cbind(star.level,freq.data))
wordembedding.dat <- star.dat
for (i in 1:dim(star.dat)[2]-1){
wordembedding.dat[which(star.dat[,i+1] >=1),i+1]=1
}
stars <- star.dat[,1]
wordembedding.dat <- cbind(stars,wordembedding.dat[,-1])
wordembedding.dat$stars <- as.factor(wordembedding.dat$stars)
m1 <- multinom(stars~staff+service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m2 <- multinom(stars~service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m3 <- multinom(stars~employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m4 <- multinom(stars~manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m5 <- multinom(stars~reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m6 <- multinom(stars~breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m7 <- multinom(stars~coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m9 <- multinom(stars~price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m10 <- multinom(stars~suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m12 <- multinom(stars~desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m13 <- multinom(stars~wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m14 <- multinom(stars~tv+fridge+pillow+towel,data=wordembedding.dat)
m15 <- multinom(stars~fridge+pillow+towel,data=wordembedding.dat)
m16 <- multinom(stars~pillow+towel,data=wordembedding.dat)
m17 <- multinom(stars~towel,data=wordembedding.dat)
m1$AIC
m1$AIC
m1$AICanova(lm(room+bath+pool+tub+shower+lobby+elevator+wall+parking+facility+gym+amenity~stars, data = wordembedding.dat))
m1$AIC
m2$AIC
m3$AIC
m4$AIC
m5$AIC
m6$AIC
m7$AIC
m8$AIC
m9$AIC
m10$AIC
m11$AIC
m7 <- multinom(stars~coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m8 <- multinom(stars~drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m9 <- multinom(stars~price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m10 <- multinom(stars~suite+bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m11 <- multinom(stars~bed+desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m12 <- multinom(stars~desk+wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m13 <- multinom(stars~wifi+tv+fridge+pillow+towel,data=wordembedding.dat)
m14 <- multinom(stars~tv+fridge+pillow+towel,data=wordembedding.dat)
m15 <- multinom(stars~fridge+pillow+towel,data=wordembedding.dat)
m16 <- multinom(stars~pillow+towel,data=wordembedding.dat)
m17 <- multinom(stars~towel,data=wordembedding.dat)
m1$AIC
m2$AIC
m3$AIC
m4$AIC
m5$AIC
m6$AIC
m7$AIC
m8$AIC
m9$AIC
m10$AIC
m11$AIC
m121$AIC
m131$AIC
m10$AIC
m11$AIC
m12$AIC
m13$AIC
m14$AIC
m15$AIC
m16$AIC
m17$AIC
aic.vec <- c(m1$AIC,m2$AIC,m3$AIC,m4$AIC,m5$AIC,m6$AIC,m7$AIC,m8$AIC,m9$AIC,m10$AIC,m11$AIC,m12$AIC,m13$AIC,m14$AIC,m15$AIC,m16$AIC,m17$AIC)
aic.vec <- c(m1$AIC,m2$AIC,m3$AIC,m4$AIC,m5$AIC,m6$AIC,m7$AIC,m8$AIC,m9$AIC,m10$AIC,m11$AIC,m12$AIC,m13$AIC,m14$AIC,m15$AIC,m16$AIC,m17$AIC)
model <-c(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16,m17,m18,m19,m20)
model <-c(m1,m2,m3,m4,m5,m6,m7,m8,m9,m10,m11,m12,m13,m14,m15,m16,m17)
model
model <-c("m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17")
cbinde(model,aic.vec)
cbind(model,aic.vec)
m1$terms
m1
m1$coefnames
m1$vcoefnames
m1$vcoefnames[-1]
variables <- cbind(m1$vcoefnames[-1],m2$vcoefnames[-1],m3$vcoefnames[-1],m4$vcoefnames[-1],m5$vcoefnames[-1],m6$vcoefnames[-1],m7$vcoefnames[-1],m8$vcoefnames[-1],m9$vcoefnames[-1],m10$vcoefnames[-1],m11$vcoefnames[-1],m12$vcoefnames[-1],m13$vcoefnames[-1],m14$vcoefnames[-1],m15$vcoefnames[-1],m16$vcoefnames[-1],m17$vcoefnames[-1])
variables
variables <- rbind(m1$vcoefnames[-1],m2$vcoefnames[-1],m3$vcoefnames[-1],m4$vcoefnames[-1],m5$vcoefnames[-1],m6$vcoefnames[-1],m7$vcoefnames[-1],m8$vcoefnames[-1],m9$vcoefnames[-1],m10$vcoefnames[-1],m11$vcoefnames[-1],m12$vcoefnames[-1],m13$vcoefnames[-1],m14$vcoefnames[-1],m15$vcoefnames[-1],m16$vcoefnames[-1],m17$vcoefnames[-1])
variables
cbind(model,aic.vec)
wordembedding.dat["staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","bed","desk","wifi","tv","fridge","pillow","towel"]
wordembedding.dat[c("staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","bed","desk","wifi","tv","fridge","pillow","towel")]
wordembedding.dat[c("stars","staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","bed","desk","wifi","tv","fridge","pillow","towel")]
service <- wordembedding.dat[c("stars","staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","bed","desk","wifi","tv","fridge","pillow","towel")]
service.dat <- wordembedding.dat[c("stars","staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","bed","desk","wifi","tv","fridge","pillow","towel")]
m1 <- multinom(stars~staff+service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m2 <- multinom(stars~service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m3 <- multinom(stars~employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m4 <- multinom(stars~manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m5 <- multinom(stars~reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m6 <- multinom(stars~breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m8 <- multinom(stars~drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m9 <- multinom(stars~price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m10 <- multinom(stars~suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m11 <- multinom(stars~bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m12 <- multinom(stars~desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m14 <- multinom(stars~tv+fridge+pillow+towel,data=service.dat)
m15 <- multinom(stars~fridge+pillow+towel,data=service.dat)
m16 <- multinom(stars~pillow+towel,data=service.dat)
m17 <- multinom(stars~towel,data=service.dat)
AIC.vec <- c(m1$AIC,m2$AIC,m3$AIC,m4$AIC,m5$AIC,m6$AIC,m7$AIC,m8$AIC,m9$AIC,m10$AIC,m11$AIC,m12$AIC,m13$AIC,m14$AIC,m15$AIC,m16$AIC,m17$AIC)
model <-c("m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17")
cbind(model,aic.vec)
m1 <- multinom(stars~staff+service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m2 <- multinom(stars~service+employee+manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m4 <- multinom(stars~manager+reservation+breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m6 <- multinom(stars~breakfast+coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m7 <- multinom(stars~coffee+drink+price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m9 <- multinom(stars~price+suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m10 <- multinom(stars~suite+bed+desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m12 <- multinom(stars~desk+wifi+tv+fridge+pillow+towel,data=service.dat)
m13 <- multinom(stars~wifi+tv+fridge+pillow+towel,data=service.dat)
m14 <- multinom(stars~tv+fridge+pillow+towel,data=service.dat)
m15 <- multinom(stars~fridge+pillow+towel,data=service.dat)
m16 <- multinom(stars~pillow+towel,data=service.dat)
m17 <- multinom(stars~towel,data=service.dat)
AIC.vec <- c(m1$AIC,m2$AIC,m3$AIC,m4$AIC,m5$AIC,m6$AIC,m7$AIC,m8$AIC,m9$AIC,m10$AIC,m11$AIC,m12$AIC,m13$AIC,m14$AIC,m15$AIC,m16$AIC,m17$AIC)
model <-c("m1","m2","m3","m4","m5","m6","m7","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17")
cbind(model,aic.vec)
library(gbm)
library(gbm)
library(randomForest)
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
for (i in 1:length(lambdas)) {
set.seed(6)
boost.m1 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = lambdas[i])
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$Class)))/sum(table(test.pred, service.dat$stars))
}
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
for (i in 1:length(lambdas)) {
set.seed(6)
boost.m1 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = lambdas[i])
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
min.lambda <- lambdas[which.min(train.boosting.error)]
min.lambda
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
min.lambda <- lambdas[which.min(train.boosting.error)]
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
for (i in 1:length(lambdas)) {
set.seed(6)
boost.m1 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = lambdas[i])
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
min.lambda <- lambdas[which.min(test.boosting.error)]
min.lambda
test.boosting.error1 <- rep(NA, 1000)
for (i in 1:1000) {
set.seed(6)
boost.m2 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = min.lambdas)
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
min.lambda <- lambdas[which.min(test.boosting.error)]
min.lambda
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
for (i in 1:length(lambdas)) {
set.seed(6)
boost.m1 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = lambdas[i])
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
library(gbm)
library(randomForest)
service.dat <- wordembedding.dat[c("stars","staff","service","employee","manager","reservation","breakfast","coffee","drink","price","suite","desk")]
facility.dat <- wordembedding.dat[c("stars","pool","shower","lobby","elevator","wall","parking","gym","amenity")]
location.dat <- wordembedding.dat[c("stars","shuttle","downtown","airport","distance","bar","location","restaurant","park","near")]
freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(star.dat$stars_x == 1))
total.star2 <-length(which(star.dat$stars_x == 2))
total.star3 <-length(which(star.dat$stars_x == 3))
total.star4 <-length(which(star.dat$stars_x == 4))
total.star5 <-length(which(star.dat$stars_x == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(star.dat$stars_x,star.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] >= 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] >= 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] >= 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] >= 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] >= 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(star.dat)[2]-1){
freq.vec <- freq(colnames(star.dat)[i+1])
freq.mat <- cbind(freq.mat,freq.vec)
}
star.level <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- colnames(star.dat)[2:dim(star.dat)[2]]
freq.data <- as.data.frame(cbind(star.level,freq.data))
wordembedding.dat <- star.dat
for (i in 1:dim(star.dat)[2]-1){
wordembedding.dat[which(star.dat[,i+1] >=1),i+1]=1
}
stars <- star.dat[,1]
wordembedding.dat <- cbind(stars,wordembedding.dat[,-1])
wordembedding.dat$stars <- as.factor(wordembedding.dat$stars)
facility.dat <- wordembedding.dat[c("stars","family","kid","clean","comfortable","small","pretty","quiet","beautiful","spacious","modern","noise","smell","comfy")]
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
pow <- seq(-10, 0, by = 0.1)
lambdas <- 10^pow
test.boosting.error <- rep(NA, length(lambdas))
for (i in 1:length(lambdas)) {
set.seed(6)
boost.m1 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = lambdas[i])
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
plot(lambdas, test.boosting.error, type="b", xlab = "lambda", ylab="Classification Error Rate")
min.lambda <- lambdas[which.min(test.boosting.error)]
min.lambda
test.boosting.error1 <- rep(NA, 1000)
for (i in 1:1000) {
set.seed(6)
boost.m2 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = min.lambda)
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
test.boosting.error2 <- rep(NA, 1000)
for (i in 1:1000) {
set.seed(6)
boost.m3 <- gbm(stars~., data = service.dat, n.trees=1000, interaction.depth = 1, distribution = "multinomial", shrinkage = min.lambda)
test.pred <- apply(predict(boost.m1, service.dat, n.trees=1000), 1, which.max)
test.boosting.error[i] <- 1-sum(diag(table(test.pred, service.dat$stars)))/sum(table(test.pred, service.dat$stars))
}
