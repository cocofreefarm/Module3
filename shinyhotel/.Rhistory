freq.mat <- cbind(freq.mat,freq.vec)
}
stars <- levels(as.factor(star.dat$stars_x))
freq.data <- freq.mat[,-(1:2)]
colnames(freq.data) <- names(wordembedding.dat)[-1]
freq.data <- as.data.frame(cbind(stars,freq.data))
avg.hotel <- sort(tapply(dat$stars_x,dat$name,mean))
avg.hotel
summary(avg.hotel)
length(avg.hotel[which(avg.hotel< 3.5)])
par(cex.axis=1)
barplot(avg.hotel[avg.hotel < 3.5], main = "Average rate of the Hotels who received lower rate in Madison", ylim = c(0,5),las=2)
lowrate.Hotels <- names(avg.hotel[avg.hotel < 3.5])
lowrate.Hotels
rev <- c()
for(i in 1:22){
rev[i] <- length(dat$stars_x[which(dat$name==lowrate.Hotels[i])])
}
sum(rev)
ref <- c()
for (i in 1:23){
temp <- which(dat$name==lowrate.Hotels[i])
ref <- c(ref,temp)
}
lowerhotel.dat <- wordembedding.dat[ref,]
stars <- lowerhotel.dat[,1]
lowerhotel.dat <- cbind(stars, lowerhotel.dat[names(sort(words[words>summary(words)[5]], decreasing= TRUE))])
lowerhotel.dat$stars <- as.factor(lowerhotel.dat$stars)
length(avg.hotel[avg.hotel > 3.5])
par(cex.axis=1)
barplot(avg.hotel[avg.hotel > 3.5], main = "Average rate of the Hotels who received better rate in Madison", ylim = c(0,5),las=2)
highrate.Hotels <- names(avg.hotel[avg.hotel > 3.5])
highrate.Hotels
rev <- c()
for(i in 1:23){
rev[i] <- length(dat$stars_x[which(dat$name==highrate.Hotels[i])])
}
sum(rev)
ref <- c()
for (i in 1:23){
temp <- which(dat$name==highrate.Hotels[i])
ref <- c(ref,temp)
}
betterhotel.dat <- wordembedding.dat[ref,]
stars <- betterhotel.dat[,1]
betterhotel.dat <- cbind(stars, betterhotel.dat[names(sort(words[words>summary(words)[5]], decreasing= TRUE))])
betterhotel.dat$stars <- as.factor(betterhotel.dat$stars)
lower.freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(lowerhotel.dat$stars == 1))
total.star2 <-length(which(lowerhotel.dat$stars == 2))
total.star3 <-length(which(lowerhotel.dat$stars == 3))
total.star4 <-length(which(lowerhotel.dat$stars == 4))
total.star5 <-length(which(lowerhotel.dat$stars == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(lowerhotel.dat$stars, lowerhotel.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] == 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] == 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] == 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] == 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] == 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
better.freq <- function(argument1){
ind <- argument1
total.star1 <-length(which(betterhotel.dat$stars == 1))
total.star2 <-length(which(betterhotel.dat$stars == 2))
total.star3 <-length(which(betterhotel.dat$stars == 3))
total.star4 <-length(which(betterhotel.dat$stars == 4))
total.star5 <-length(which(betterhotel.dat$stars == 5))
total.v <- c(total.star1,total.star2,total.star3,total.star4,total.star5)
freq.dat <- cbind(betterhotel.dat$stars, betterhotel.dat[,ind])
star1 <-length(which(freq.dat[,1] == 1 & freq.dat[,2] == 1))
star2 <-length(which(freq.dat[,1] == 2 & freq.dat[,2] == 1))
star3 <-length(which(freq.dat[,1] == 3 & freq.dat[,2] == 1))
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] == 1))
star5 <-length(which(freq.dat[,1] == 5 & freq.dat[,2] == 1))
v <- c(star1, star2, star3, star4, star5)
freq <- v/total.v
freq
}
freq.lower.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(lowerhotel.dat)[2]-2){
freq.lower.vec <- lower.freq(colnames(lowerhotel.dat)[i+2])
freq.lower.mat <- cbind(freq.lower.mat,freq.lower.vec)
}
freq.higher.mat <- matrix(rep(NA,5),nrow=5)
for (i in 1:dim(betterhotel.dat)[2]-2){
freq.higher.vec <- better.freq(colnames(betterhotel.dat)[i+2])
freq.higher.mat <- cbind(freq.higher.mat,freq.higher.vec)
}
stars <- levels(as.factor(wordembedding.dat$stars))
freq.lower.mat <- freq.lower.mat[,-(1:2)]
freq.higher.mat <- freq.higher.mat[,-(1:2)]
colnames(freq.lower.mat) <- names(wordembedding.dat)[-1]
colnames(freq.higher.mat) <- names(wordembedding.dat)[-1]
grade <- rep("lower",5)
lower.freq.dat <- as.data.frame(cbind(grade,stars,freq.lower.mat))
grade <- rep("better",5)
better.freq.dat <- as.data.frame(cbind(grade,stars,freq.higher.mat))
frequency.dat <- rbind(lower.freq.dat,better.freq.dat)
frequency.dat <- type.convert(frequency.dat)
frequency.dat$stars <- as.factor(frequency.dat$stars)
lowerhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)]
freq.dat <- cbind(lowerhotel.dat$stars, lowerhotel.dat[,"staff"])
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] == 1))
v <- star4
non <- total.v-v
lowerhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)]
freq.dat <- cbind(lowerhotel.dat$stars, lowerhotel.dat[,"staff"])
star4 <-length(which(freq.dat[,1] == 4 & freq.dat[,2] == 1))
t.test(lowerhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)],betterhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)])
t.test(lowerhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)],betterhotel.dat[,"staff"][which(lowerhotel.dat$stars == 3)])
z.test
test.proportion <- function(star,argument1){
ind <- argument1
total.lower.star1 <-length(which(lowerhotel.dat$stars == 1))
total.lower.star2 <-length(which(lowerhotel.dat$stars == 2))
total.lower.star3 <-length(which(lowerhotel.dat$stars == 3))
total.lower.star4 <-length(which(lowerhotel.dat$stars == 4))
total.lower.star5 <-length(which(lowerhotel.dat$stars == 5))
total.lower.v <- c(total.lower.star1,total.lower.star2,total.lower.star3,total.lower.star4,total.lower.star5)
freq.lower.dat <- cbind(lowerhotel.dat$stars, lowerhotel.dat[,ind])
lower.star1 <-length(which(freq.lower.dat[,1] == 1 & freq.lower.dat[,2] == 1))
lower.star2 <-length(which(freq.lower.dat[,1] == 2 & freq.lower.dat[,2] == 1))
lower.star3 <-length(which(freq.lower.dat[,1] == 3 & freq.lower.dat[,2] == 1))
lower.star4 <-length(which(freq.lower.dat[,1] == 4 & freq.lower.dat[,2] == 1))
lower.star5 <-length(which(freq.lower.dat[,1] == 5 & freq.lower.dat[,2] == 1))
lower.v <- c(lower.star1, lower.star2, lower.star3, lower.star4, star5)
lower.dat <- cbind(lower.v,total.lower.v)
total.better.star1 <-length(which(betterhotel.dat$stars == 1))
total.better.star2 <-length(which(betterhotel.dat$stars == 2))
total.better.star3 <-length(which(betterhotel.dat$stars == 3))
total.better.star4 <-length(which(betterhotel.dat$stars == 4))
total.better.star5 <-length(which(betterhotel.dat$stars == 5))
total.better.v <- c(total.better.star1,total.better.star2,total.better.star3,total.better.star4,total.better.star5)
freq.better.dat <- cbind(betterhotel.dat$stars, betterhotel.dat[,ind])
better.star1 <-length(which(freq.better.dat[,1] == 1 & freq.better.dat[,2] == 1))
better.star2 <-length(which(freq.better.dat[,1] == 2 & freq.better.dat[,2] == 1))
better.star3 <-length(which(freq.better.dat[,1] == 3 & freq.better.dat[,2] == 1))
better.star4 <-length(which(freq.better.dat[,1] == 4 & freq.better.dat[,2] == 1))
better.star5 <-length(which(freq.better.dat[,1] == 5 & freq.better.dat[,2] == 1))
better.v <- c(better.star1, better.star2, better.star3, better.star4, better.star5)
better.dat <- cbind(better.v,total.better.v)
prop.test(x=c(lower.dat[star,1],better.dat[star,1]),n=c(lower.dat[star,2],better.dat[star,2]))
}
test.proportion(1,"staff")
test.proportion <- function(star,argument1){
ind <- argument1
total.lower.star1 <-length(which(lowerhotel.dat$stars == 1))
total.lower.star2 <-length(which(lowerhotel.dat$stars == 2))
total.lower.star3 <-length(which(lowerhotel.dat$stars == 3))
total.lower.star4 <-length(which(lowerhotel.dat$stars == 4))
total.lower.star5 <-length(which(lowerhotel.dat$stars == 5))
total.lower.v <- c(total.lower.star1,total.lower.star2,total.lower.star3,total.lower.star4,total.lower.star5)
freq.lower.dat <- cbind(lowerhotel.dat$stars, lowerhotel.dat[,ind])
lower.star1 <-length(which(freq.lower.dat[,1] == 1 & freq.lower.dat[,2] == 1))
lower.star2 <-length(which(freq.lower.dat[,1] == 2 & freq.lower.dat[,2] == 1))
lower.star3 <-length(which(freq.lower.dat[,1] == 3 & freq.lower.dat[,2] == 1))
lower.star4 <-length(which(freq.lower.dat[,1] == 4 & freq.lower.dat[,2] == 1))
lower.star5 <-length(which(freq.lower.dat[,1] == 5 & freq.lower.dat[,2] == 1))
lower.v <- c(lower.star1, lower.star2, lower.star3, lower.star4, lower.star5)
lower.dat <- cbind(lower.v,total.lower.v)
total.better.star1 <-length(which(betterhotel.dat$stars == 1))
total.better.star2 <-length(which(betterhotel.dat$stars == 2))
total.better.star3 <-length(which(betterhotel.dat$stars == 3))
total.better.star4 <-length(which(betterhotel.dat$stars == 4))
total.better.star5 <-length(which(betterhotel.dat$stars == 5))
total.better.v <- c(total.better.star1,total.better.star2,total.better.star3,total.better.star4,total.better.star5)
freq.better.dat <- cbind(betterhotel.dat$stars, betterhotel.dat[,ind])
better.star1 <-length(which(freq.better.dat[,1] == 1 & freq.better.dat[,2] == 1))
better.star2 <-length(which(freq.better.dat[,1] == 2 & freq.better.dat[,2] == 1))
better.star3 <-length(which(freq.better.dat[,1] == 3 & freq.better.dat[,2] == 1))
better.star4 <-length(which(freq.better.dat[,1] == 4 & freq.better.dat[,2] == 1))
better.star5 <-length(which(freq.better.dat[,1] == 5 & freq.better.dat[,2] == 1))
better.v <- c(better.star1, better.star2, better.star3, better.star4, better.star5)
better.dat <- cbind(better.v,total.better.v)
prop.test(x=c(lower.dat[star,1],better.dat[star,1]),n=c(lower.dat[star,2],better.dat[star,2]))
}
test.proportion(1,"staff")
test.proportion(1:2,"staff")
test.proportion(1:3,"staff")
avg.hotel <- sort(tapply(dat$stars_x,dat$name,mean))
avg.hotel
colname <- avg.hotel
hotel.names <- names(avg.hotel)
avg.hotel <- sort(tapply(dat$stars_x,dat$name,mean))
hotel.names <- names(avg.hotel)
average
mean(avg.hotel)
star.dat$name.1
star.dat <- dat[,c(2,11:dim(dat)[2])]
View(star.dat)
View(dat)
dat <- read.csv("Data/df.csv",header=TRUE)
star.dat <- dat[,c(2,5,11:dim(dat)[2])]
dat <- read.csv("Data/df.csv",header=TRUE)
dat <- read.csv("Data/df.csv",header=TRUE)
shiny::runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/OneDrive - UW-Madison/Backup/UofW/2020 Fall/STAT 628/Homeworks/Module 2/Module_2-master/Code')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
ui = fluidPage(
titlePanel(h1(id = "title","Hotel Analysis based on Yelp ",align = "center")),
tags$style(HTML("#title{font-size: 50px;font-family: Georgia;}")),
hr(),
fluidRow(column(4, h2("Input")), column(4, h2("Output"))),
sidebarLayout(
sidebarPanel(
p("Please select your hotel below:"),
fluidRow(column(12,style=list("padding-left: 5px;"),
selectInput("Hotel_name",label="Hotel Name List",
choices=c('Budget Host Aloha Inn Motel',
'Rodeway Inn & Suites WI Madison-Northeast',
'Super 8 by Wyndham Madison East',
'Americas Best Value Inn Madison',
'Baymont Inn And Suites Madison',
'Red Roof Inn Madison, WI',
'Magnuson Grand Hotel Madison',
'Howard Johnson Plaza Hotel by Wyndham Madison',
'Crowne Plaza Hotel - Madison',
'Candlewood Suites Madison - Fitchburg',
'Microtel Inn & Suites by Wyndham Madison East',
'Baymont by Wyndham Madison West/Middleton WI West',
'Comfort Inn & Suites Madison - Airport',
'Holiday Inn Hotel & Suites Madison West',
'Econo Lodge',
'Holiday Inn Express',
'Days Inn & Suites by Wyndham Madison',
'Quality Inn & Suites',
'University Inn Madison',
'Residence Inn Madison East',
'Radisson Hotel - Madison',
'AC Hotel by Marriott Madison Downtown',
'La Quinta by Wyndham Madison American Center',
'Clarion Suites at the Alliant Energy Center',
'AmericInn by Wyndham Madison West',
'Comfort Inn Madison - Downtown',
'Holiday Inn Madison at The American Center',
'Fairfield Inn & Suites by Marriott Madison East',
'Hyatt Place Madison Downtown',
'Cambria Hotel Madison East',
'Staybridge Suites Madison-East',
'Homewood Suites by Hilton Madison West',
'The Madison Concourse Hotel and Governor\'s Club',
'Hampton Inn Madison East Towne Mall Area',
'Sleep Inn & Suites',
'DoubleTree by Hilton Hotel Madison',
'Super 8 by Wyndham Madison South',
'Holiday Inn Express & Suites Madison',
'Hotel Ruby Marie',
'Tru by Hilton Madison West',
'Hampton Inn & Suites Madison-West',
'Hampton Inn & Suites Madison / Downtown',
'Holiday Inn Express & Suites Madison Central',
'SpringHill Suites Madison',
'Hotel Indigo Madison Downtown'), selected='AC Hotel by Marriott Madison Downtown', multiple=F)
)),
p("Click to see the details of :"),
fluidRow(column(6,style=list("padding-left: 5px;"),radioButtons("variable1", "Service",c("Reservation","Price","Staff","Manager","Breakfast","Desk"))),
column(6,style=list("padding-left: 5px;"),checkboxGroupInput("variable2", "Facility",c("Nice Wall","Parking Availabilty")))),
),
mainPanel(
tabsetPanel(
tabPanel("Customers' Evaluation", h3("Overall:"),textOutput("Overall"),plotOutput(outputId="barplot"),h3("Service:"),textOutput("Service"),h3("Facility"),textOutput("Facility"),h3("Location"),textOutput("Location"),h3("Atmosphere"),textOutput("Atmosphere")),
tabPanel("Plot"),
#The plot should be wordcloud based on python
tabPanel("Tips",
h3(htmlOutput("att1")),
h3(htmlOutput("att2")),
h3(htmlOutput("att3")),
h3(htmlOutput("att4")),
),
tabPanel("Contact us")
)
)
)
)
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/OneDrive - UW-Madison/Backup/UofW/2020 Fall/STAT 628/Homeworks/Module 2/Module_2-master/Code')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp()
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp()
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp()
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp()
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
runApp()
runApp('C:/Users/hkang/Desktop/Module3/shinyhotel')
dat <- read.csv("wordembedding.csv",header=TRUE)
avg.hotel <- sort(tapply(as.numeric(dat$stars),dat$name,mean))
hotel.names <- names(avg.hotel)
if (round(avg.hotel[hotel.names[30]],1)<round(mean(avg.hotel),1)){
print(paste(hotel.names[30],"obtained",round(avg.hotel[hotel.names[30]],1),"average rate which is below the average rate(",round(mean(avg.hotel),1),")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",round(avg.hotel[hotel.names[30]],1),"average rate which is above the average rate(",round(mean(avg.hotel),1),") of hotels in Madison Area"))
}
print(paste(hotel.names[30],"got",length(which(dat$name==hotel.names[30])),"reviews from the customers"))
barplot(table(dat$stars[which(dat$name==hotel.names[30])]), xlab="Stars",ylab="Number of Review", main=hotel.names[30])
setwd("C:/Users/hkang/Desktop/Module3/shinyhotel")
dat <- read.csv("wordembedding.csv",header=TRUE)
avg.hotel <- sort(tapply(as.numeric(dat$stars),dat$name,mean))
hotel.names <- names(avg.hotel)
if (round(avg.hotel[hotel.names[30]],1)<round(mean(avg.hotel),1)){
print(paste(hotel.names[30],"obtained",round(avg.hotel[hotel.names[30]],1),"average rate which is below the average rate(",round(mean(avg.hotel),1),")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",round(avg.hotel[hotel.names[30]],1),"average rate which is above the average rate(",round(mean(avg.hotel),1),") of hotels in Madison Area"))
}
print(paste(hotel.names[30],"got",length(which(dat$name==hotel.names[30])),"reviews from the customers"))
barplot(table(dat$stars[which(dat$name==hotel.names[30])]), xlab="Stars",ylab="Number of Review", main=hotel.names[30])
if(length(which(dat$name==hotel.names[30]))>5){
part.dat <- dat[which(dat$name==hotel.names[30]),]
part.words <- apply(part.dat[,4:dim(part.dat)[2]],2,sum)
part.freq <- names(sort(part.words, decreasing= TRUE)[1:30])
print(paste("Most frequently appeared 30 words in reviews for",hotel.names[30],"are"))
print(sort(part.words, decreasing= TRUE)[1:30])
service.avg <- round(mean(as.numeric(dat$stars[which(dat[,"booked"]==1|dat[,"money"]==1|dat[,"staff"]==1|dat[,"manager"]==1|dat[,"breakfast"]==1|dat[,"desk"]==1)])),1)
facility.avg <- round(mean(as.numeric(dat$stars[which(dat[,"wall"]==1|dat[,"parking"]==1)])),1)
location.avg <- round(mean(as.numeric(dat$stars[which(dat[,"bar"]==1|dat[,"downtown"]==1|dat[,"restaurant"]==1|dat[,"location"]==1)])),1)
atmosphere.avg <- round(mean(as.numeric(dat$stars[which(dat[,"clean"]==1|dat[,"quiet"]==1|dat[,"comfortable"]==1|dat[,"spacious"]==1|dat[,"quiet"]==1|dat[,"smell"]==1|dat[,"modern"]==1|dat[,"pretty"]==1|dat[,"comfy"]==1|dat[,"dirty"]==1)])),1)
service.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"booked"]==1|part.dat[,"money"]==1|part.dat[,"staff"]==1|part.dat[,"manager"]==1|part.dat[,"breakfast"]==1|part.dat[,"desk"]==1)])),1)
facility.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"wall"]==1|part.dat[,"parking"]==1)])),1)
location.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"bar"]==1|part.dat[,"downtown"]==1|part.dat[,"restaurant"]==1|part.dat[,"location"]==1)])),1)
atmosphere.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"clean"]==1|part.dat[,"quiet"]==1|part.dat[,"comfortable"]==1|part.dat[,"spacious"]==1|part.dat[,"quiet"]==1|part.dat[,"smell"]==1|part.dat[,"modern"]==1|part.dat[,"pretty"]==1|part.dat[,"comfy"]==1|part.dat[,"dirty"]==1)])),1)
if(service.part.avg>service.avg){
print(paste(hotel.names[30],"obtained",service.part.avg,"star rate for service which is above the average rate(",service.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",service.part.avg,"star rate for service which is below the average rate(",service.avg,")of hotels in Madison Area"))
}
if(facility.part.avg>facility.avg){
print(paste(hotel.names[30],"obtained",facility.part.avg,"star rate for facility which is above the average rate(",facility.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",facility.part.avg,"star rate for facility which is below the average rate(",facility.avg,")of hotels in Madison Area"))
}
if(location.part.avg>location.avg){
print(paste(hotel.names[30],"obtained",location.part.avg,"star rate for location which is above the average rate(",location.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",location.part.avg,"star rate for location which is below the average rate(",location.avg,")of hotels in Madison Area"))
}
if(atmosphere.part.avg>atmosphere.avg){
print(paste(hotel.names[30],"obtained",atmosphere.part.avg,"star rate for atmosphere which is above the average rate(",atmosphere.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",atmosphere.part.avg,"star rate for atmosphere which is below the average rate(",atmosphere.avg,")of hotels in Madison Area"))
}
service <- c("booked","money","staff","manager","breakfast","desk")
facility <- c("wall","parking")
location <- c("bar","downtown","restaurant","location")
atmosphere <- c("clean","comfortable","spacious","quiet","smell","modern","pretty","comfy","dirty")
#service
book.part.star <- as.numeric(part.dat$stars[which(part.dat[,"booked"]==1)])
money.part.star <- as.numeric(part.dat$stars[which(part.dat[,"money"]==1)])
staff.part.star <- as.numeric(part.dat$stars[which(part.dat[,"staff"]==1)])
manager.part.star <- as.numeric(part.dat$stars[which(part.dat[,"manager"]==1)])
breakfast.part.star <- as.numeric(part.dat$stars[which(part.dat[,"breakfast"]==1)])
desk.part.star <- as.numeric(part.dat$stars[which(part.dat[,"desk"]==1)])
book.dat.star <- as.numeric(dat$stars[which(dat[,"booked"]==1)])
money.dat.star <- as.numeric(dat$stars[which(dat[,"money"]==1)])
staff.dat.star <- as.numeric(dat$stars[which(dat[,"staff"]==1)])
manager.dat.star <- as.numeric(dat$stars[which(dat[,"manager"]==1)])
breakfast.dat.star <- as.numeric(dat$stars[which(dat[,"breakfast"]==1)])
desk.dat.star <- as.numeric(dat$stars[which(dat[,"desk"]==1)])
#facility
wall.part.star <- as.numeric(part.dat$stars[which(part.dat[,"wall"]==1)])
parking.part.star <- as.numeric(part.dat$stars[which(part.dat[,"parking"]==1)])
wall.dat.star <- as.numeric(dat$stars[which(dat[,"wall"]==1)])
parking.dat.star <- as.numeric(dat$stars[which(dat[,"parking"]==1)])
#location
bar.part.star <- as.numeric(part.dat$stars[which(part.dat[,"bar"]==1)])
downtown.part.star <- as.numeric(part.dat$stars[which(part.dat[,"downtown"]==1)])
restaurant.part.star <- as.numeric(part.dat$stars[which(part.dat[,"restaurant"]==1)])
location.part.star <- as.numeric(part.dat$stars[which(part.dat[,"location"]==1)])
bar.dat.star <- as.numeric(dat$stars[which(dat[,"bar"]==1)])
downtown.dat.star <- as.numeric(dat$stars[which(dat[,"downtown"]==1)])
restaurant.dat.star <- as.numeric(dat$stars[which(dat[,"restaurant"]==1)])
location.dat.star <- as.numeric(dat$stars[which(dat[,"location"]==1)])
#atmosphere
clean.part.star <- as.numeric(part.dat$stars[which(part.dat[,"clean"]==1)])
comfortable.part.star <- as.numeric(part.dat$stars[which(part.dat[,"comfortable"]==1)])
spacious.part.star <- as.numeric(part.dat$stars[which(part.dat[,"spacious"]==1)])
quiet.part.star <- as.numeric(part.dat$stars[which(part.dat[,"quiet"]==1)])
smell.part.star <- as.numeric(part.dat$stars[which(part.dat[,"smell"]==1)])
modern.part.star <- as.numeric(part.dat$stars[which(part.dat[,"modern"]==1)])
pretty.part.star <- as.numeric(part.dat$stars[which(part.dat[,"pretty"]==1)])
comfy.part.star <- as.numeric(part.dat$stars[which(part.dat[,"comfy"]==1)])
dirty.part.star <- as.numeric(part.dat$stars[which(part.dat[,"dirty"]==1)])
clean.dat.star <- as.numeric(dat$stars[which(dat[,"clean"]==1)])
comfortable.dat.star <- as.numeric(dat$stars[which(dat[,"comfortable"]==1)])
spacious.dat.star <- as.numeric(dat$stars[which(dat[,"spacious"]==1)])
quiet.dat.star <- as.numeric(dat$stars[which(dat[,"quiet"]==1)])
smell.dat.star <- as.numeric(dat$stars[which(dat[,"smell"]==1)])
modern.dat.star <- as.numeric(dat$stars[which(dat[,"modern"]==1)])
pretty.dat.star <- as.numeric(dat$stars[which(dat[,"pretty"]==1)])
comfy.dat.star <- as.numeric(dat$stars[which(dat[,"comfy"]==1)])
dirty.dat.star <- as.numeric(dat$stars[which(dat[,"dirty"]==1)])
boxplot(cbind(book.part.star,book.dat.star),main=paste('booked.star comparison between high rated hotel and low rated hotel'))
}else{
print("Not enough reviews from customers")
}
t.test(clean.dat.star,clean.dat.star)
runApp()
runApp('C:/Users/hkang/OneDrive - UW-Madison/Backup/UofW/2020 Fall/STAT 628/Homeworks/Module 2/Module_2-master/Code')
runApp()
runApp()
runApp()
if(length(which(dat$name==hotel.names[30]))>5){
part.dat <- dat[which(dat$name==hotel.names[30]),]
part.words <- apply(part.dat[,4:dim(part.dat)[2]],2,sum)
part.freq <- names(sort(part.words, decreasing= TRUE)[1:30])
print(paste("Most frequently appeared 30 words in reviews for",hotel.names[30],"are"))
print(sort(part.words, decreasing= TRUE)[1:30])
service.avg <- round(mean(as.numeric(dat$stars[which(dat[,"booked"]==1|dat[,"money"]==1|dat[,"staff"]==1|dat[,"manager"]==1|dat[,"breakfast"]==1|dat[,"desk"]==1)])),1)
facility.avg <- round(mean(as.numeric(dat$stars[which(dat[,"wall"]==1|dat[,"parking"]==1)])),1)
location.avg <- round(mean(as.numeric(dat$stars[which(dat[,"bar"]==1|dat[,"downtown"]==1|dat[,"restaurant"]==1|dat[,"location"]==1)])),1)
atmosphere.avg <- round(mean(as.numeric(dat$stars[which(dat[,"clean"]==1|dat[,"quiet"]==1|dat[,"comfortable"]==1|dat[,"spacious"]==1|dat[,"quiet"]==1|dat[,"smell"]==1|dat[,"modern"]==1|dat[,"pretty"]==1|dat[,"comfy"]==1|dat[,"dirty"]==1)])),1)
service.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"booked"]==1|part.dat[,"money"]==1|part.dat[,"staff"]==1|part.dat[,"manager"]==1|part.dat[,"breakfast"]==1|part.dat[,"desk"]==1)])),1)
facility.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"wall"]==1|part.dat[,"parking"]==1)])),1)
location.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"bar"]==1|part.dat[,"downtown"]==1|part.dat[,"restaurant"]==1|part.dat[,"location"]==1)])),1)
atmosphere.part.avg <- round(mean(as.numeric(part.dat$stars[which(part.dat[,"clean"]==1|part.dat[,"quiet"]==1|part.dat[,"comfortable"]==1|part.dat[,"spacious"]==1|part.dat[,"quiet"]==1|part.dat[,"smell"]==1|part.dat[,"modern"]==1|part.dat[,"pretty"]==1|part.dat[,"comfy"]==1|part.dat[,"dirty"]==1)])),1)
if(service.part.avg>service.avg){
print(paste(hotel.names[30],"obtained",service.part.avg,"star rate for service which is above the average rate(",service.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",service.part.avg,"star rate for service which is below the average rate(",service.avg,")of hotels in Madison Area"))
}
if(facility.part.avg>facility.avg){
print(paste(hotel.names[30],"obtained",facility.part.avg,"star rate for facility which is above the average rate(",facility.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",facility.part.avg,"star rate for facility which is below the average rate(",facility.avg,")of hotels in Madison Area"))
}
if(location.part.avg>location.avg){
print(paste(hotel.names[30],"obtained",location.part.avg,"star rate for location which is above the average rate(",location.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",location.part.avg,"star rate for location which is below the average rate(",location.avg,")of hotels in Madison Area"))
}
if(atmosphere.part.avg>atmosphere.avg){
print(paste(hotel.names[30],"obtained",atmosphere.part.avg,"star rate for atmosphere which is above the average rate(",atmosphere.avg,")of hotels in Madison Area"))
}else{
print(paste(hotel.names[30],"obtained",atmosphere.part.avg,"star rate for atmosphere which is below the average rate(",atmosphere.avg,")of hotels in Madison Area"))
}
service <- c("booked","money","staff","manager","breakfast","desk")
facility <- c("wall","parking")
location <- c("bar","downtown","restaurant","location")
atmosphere <- c("clean","comfortable","spacious","quiet","smell","modern","pretty","comfy","dirty")
#service
book.part.star <- as.numeric(part.dat$stars[which(part.dat[,"booked"]==1)])
money.part.star <- as.numeric(part.dat$stars[which(part.dat[,"money"]==1)])
staff.part.star <- as.numeric(part.dat$stars[which(part.dat[,"staff"]==1)])
manager.part.star <- as.numeric(part.dat$stars[which(part.dat[,"manager"]==1)])
breakfast.part.star <- as.numeric(part.dat$stars[which(part.dat[,"breakfast"]==1)])
desk.part.star <- as.numeric(part.dat$stars[which(part.dat[,"desk"]==1)])
book.dat.star <- as.numeric(dat$stars[which(dat[,"booked"]==1)])
money.dat.star <- as.numeric(dat$stars[which(dat[,"money"]==1)])
staff.dat.star <- as.numeric(dat$stars[which(dat[,"staff"]==1)])
manager.dat.star <- as.numeric(dat$stars[which(dat[,"manager"]==1)])
breakfast.dat.star <- as.numeric(dat$stars[which(dat[,"breakfast"]==1)])
desk.dat.star <- as.numeric(dat$stars[which(dat[,"desk"]==1)])
#facility
wall.part.star <- as.numeric(part.dat$stars[which(part.dat[,"wall"]==1)])
parking.part.star <- as.numeric(part.dat$stars[which(part.dat[,"parking"]==1)])
wall.dat.star <- as.numeric(dat$stars[which(dat[,"wall"]==1)])
parking.dat.star <- as.numeric(dat$stars[which(dat[,"parking"]==1)])
#location
bar.part.star <- as.numeric(part.dat$stars[which(part.dat[,"bar"]==1)])
downtown.part.star <- as.numeric(part.dat$stars[which(part.dat[,"downtown"]==1)])
restaurant.part.star <- as.numeric(part.dat$stars[which(part.dat[,"restaurant"]==1)])
location.part.star <- as.numeric(part.dat$stars[which(part.dat[,"location"]==1)])
bar.dat.star <- as.numeric(dat$stars[which(dat[,"bar"]==1)])
downtown.dat.star <- as.numeric(dat$stars[which(dat[,"downtown"]==1)])
restaurant.dat.star <- as.numeric(dat$stars[which(dat[,"restaurant"]==1)])
location.dat.star <- as.numeric(dat$stars[which(dat[,"location"]==1)])
#atmosphere
clean.part.star <- as.numeric(part.dat$stars[which(part.dat[,"clean"]==1)])
comfortable.part.star <- as.numeric(part.dat$stars[which(part.dat[,"comfortable"]==1)])
spacious.part.star <- as.numeric(part.dat$stars[which(part.dat[,"spacious"]==1)])
quiet.part.star <- as.numeric(part.dat$stars[which(part.dat[,"quiet"]==1)])
smell.part.star <- as.numeric(part.dat$stars[which(part.dat[,"smell"]==1)])
modern.part.star <- as.numeric(part.dat$stars[which(part.dat[,"modern"]==1)])
pretty.part.star <- as.numeric(part.dat$stars[which(part.dat[,"pretty"]==1)])
comfy.part.star <- as.numeric(part.dat$stars[which(part.dat[,"comfy"]==1)])
dirty.part.star <- as.numeric(part.dat$stars[which(part.dat[,"dirty"]==1)])
clean.dat.star <- as.numeric(dat$stars[which(dat[,"clean"]==1)])
comfortable.dat.star <- as.numeric(dat$stars[which(dat[,"comfortable"]==1)])
spacious.dat.star <- as.numeric(dat$stars[which(dat[,"spacious"]==1)])
quiet.dat.star <- as.numeric(dat$stars[which(dat[,"quiet"]==1)])
smell.dat.star <- as.numeric(dat$stars[which(dat[,"smell"]==1)])
modern.dat.star <- as.numeric(dat$stars[which(dat[,"modern"]==1)])
pretty.dat.star <- as.numeric(dat$stars[which(dat[,"pretty"]==1)])
comfy.dat.star <- as.numeric(dat$stars[which(dat[,"comfy"]==1)])
dirty.dat.star <- as.numeric(dat$stars[which(dat[,"dirty"]==1)])
boxplot(cbind(book.part.star,book.dat.star),main=paste('booked.star comparison between high rated hotel and low rated hotel'))
t.test(clean.dat.star,clean.dat.star)
}else{
print("Not enough reviews from customers")
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
hotel.name
hotel.names
source('C:/Users/hkang/Desktop/Module3/Models for Shinny App.R')
runApp()
